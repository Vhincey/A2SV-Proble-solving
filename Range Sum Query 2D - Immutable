class NumMatrix(object):

    def __init__(self, matrix):
        """
        :type matrix: List[List[int]]
        """

        # if not matrix or matrix[0]:
        #     return
        matrix = matrix
        rows = len(matrix)
        cols = len(matrix[0])
        self.ps = [[0] * (cols + 1) for _ in range(rows + 1)] 
                
        for i in range(1, rows + 1):
            for j in range(1, cols + 1):
                self.ps[i][j] = matrix[i - 1][j - 1] + self.ps[i - 1][j] + self.ps[i][j-1] - self.ps[i - 1][j - 1]
        print(self.ps) 

    def sumRegion(self, row1, col1, row2, col2):
        """
        :type row1: int
        :type col1: int
        :type row2: int
        :type col2: int
        :rtype: int
        """
        return self.ps[row2 + 1][col2 + 1] - self.ps[row2 + 1][col1] - self.ps[row1][col2 + 1] + self.ps[row1][col1]

# Your NumMatrix object will be instantiated and called as such:
# obj = NumMatrix(matrix)
# param_1 = obj.sumRegion(row1,col1,row2,col2)
